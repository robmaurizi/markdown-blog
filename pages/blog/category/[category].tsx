import { GetStaticPaths, GetStaticProps } from 'next'
import { ParsedUrlQuery } from 'querystring'
import Head from 'next/head'
import NavBar from '../../../components/Masthead';
import BlogGrid from '../../../components/BlogGrid';
import BlogHeader from '../../../components/BlogHeader';

import { getAllTermPosts, getTerms } from '../../../utils/lib'

interface IParams extends ParsedUrlQuery {
  category: string
}

type Props = {
  posts: [{
    slug: string,
    frontmatter: {
      title: string;
      publishDate: string;
      description: string;
      featuredImage: {
          url: string;
          alt: string;
      }     
    }
  }],
  term: string
}

function Category({ posts, term }: Props) {
  term = term.replace(/-/g,' ');
  const pageTitle = `Posts categorized "${term}" | Hypertext Jockey`;
  return (
    <div>
      <Head>
        <title>{ pageTitle }</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar />

      <BlogHeader termType='Category' term={term} />
      <BlogGrid posts={posts} />

    </div>
  )
}

export const getStaticPaths:GetStaticPaths = async () => {
  const terms = await getTerms("content", "category");
  const paths = terms.map((category: string) => ({
    params: {
      category,
    }
  }));
  return {
    paths,
    fallback: false,
  };
};

export const getStaticProps:GetStaticProps = async ({ params }) => {
  const { category } = params as IParams;
  const posts = await getAllTermPosts("content", category, 'category');
  return {
    props: { 
      posts,
      term: category
     }
  };
};


export default Category
